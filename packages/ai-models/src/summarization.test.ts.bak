
import { describe, it, expect } from 'vitest';
import { getSummary } from './summarization.ts';
import { promises as fs } from 'fs';
import path from 'path';

const dataDir = path.join(__dirname, '../data');

describe('getSummary', () => {
  it('should return a summary for the "I Have a Dream" speech', async () => {
    const filePath = path.join(dataDir, 'i-have-a-dream.txt');
    const document = await fs.readFile(filePath, 'utf-8');
    const result = await getSummary(document);
    expect(result).toHaveProperty('completion');
    expect(typeof result.completion).toBe('string');
    expect(result.completion.length).toBeGreaterThan(0);
    expect(result).toHaveProperty('usage');
  });

  it('should handle empty documents', async () => {
    const document = '';
    const result = await getSummary(document);
    expect(result).toHaveProperty('completion');
    expect(typeof result.completion).toBe('string');
  });
});
